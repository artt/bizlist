{"version":3,"sources":["SearchBox.js","myutil.js","Card.js","CardList.js","Logo.js","App.js","serviceWorker.js","index.js"],"names":["handlefocus","event","target","select","SearchBox","searchchange","className","type","placeholder","onChange","onFocus","trimURLplus","fullurl","tmp","trim","match","trimFacebook","fburl","Card","entry","datakey","fullname","remark","call","split","map","item","i","href","phonetext","key","website","rel","myutil","facebook","line","d","fill","color","CardList","entries","Logo","App","useEffect","console","log","fetch","then","response","text","responsetext","reducedResponse","JSON","parse","replace","feed","filter","display","t","setEntries","e","email","keyword","name","score","processResponse","useState","searchfield","setSearchfield","length","id","value","toLowerCase","sf","scoreEntry","push","Object","assign","sort","a","b","filterEntries","ref_names","substring","concat","ref_keywords","x","result_names","indexToScore","result_keywords","Math","max","result_others","str","idx","toString","indexOf","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e24f6dea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SearchBox({searchchange}) {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<input\r\n\t\t\t\tclassName='searchbox'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='company name'\r\n\t\t\t\tonChange={searchchange}\r\n\t\t\t\tonFocus={handlefocus}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction handlefocus(event) {\r\n\tevent.target.select();\r\n}\r\n\r\nexport default SearchBox;","export function trimURL(fullurl) {\r\n\tconst tmp = fullurl.trim().match(/(\\/\\/www\\.|www\\.|\\/\\/)([^/]+)/);\r\n\tif (tmp === null) {\r\n\t\treturn fullurl.trim();\r\n\t}\r\n\treturn tmp[2];\r\n}\r\n\r\nexport function trimURLplus(fullurl) {\r\n\tconst tmp = fullurl.trim().match(/(\\/\\/www\\.|www\\.|\\/\\/)([^/.]+)/);\r\n\tif (tmp === null) {\r\n\t\treturn fullurl.trim();\r\n\t}\r\n\treturn tmp[2];\r\n}\r\n\r\nexport function trimPhone(phonetext) {\r\n\tconst tmp = phonetext.trim().match(/(\\d{4}|\\d-\\d{4}-\\d{4}|\\d{3}-\\d{3}-\\d{4}|\\d{3}-\\d{3}-\\d{3})/);\r\n\t\r\n\treturn tmp[0];\r\n}\r\n\r\nexport function trimFacebook(fburl) {\r\n\tconst tmp = fburl.trim().match(/facebook.com\\/([^/]+)\\/?/);\r\n\tif (tmp === null) {\r\n\t\treturn fburl.trim();\r\n\t}\r\n\treturn tmp[1];\r\n}","import React from 'react';\r\nimport './style.css';\r\nimport * as myutil from './myutil.js';\r\n\r\n\r\n\r\nfunction Card({entry, datakey}) {\r\n\treturn(\r\n\t\t<div className='card' datakey={datakey}>\r\n\t\t\t\r\n\t\t\t{/* title */}\r\n\t\t\t<div className='title'>{entry.fullname + (entry.remark && (' (' + entry.remark + ')'))}</div>\r\n\t\t\t\r\n\t\t\t{/* phone */}\r\n\t\t\t<div>{ entry.call &&\r\n\t\t\t\tentry.call.split('\\n').map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<a href={`tel:${myutil.trimPhone(item)}`} key={i}>\r\n\t\t\t\t\t\t\t<span className='ts'>\r\n\t\t\t\t\t\t\t\t{item} <i className=\"fas fa-phone\"></i>&nbsp;\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}</div>\r\n\r\n\t\t\t{/* website, facebook, line */}\r\n\t\t\t<div>\r\n\t\t\t\t{ entry.website &&\r\n\t\t\t\t\t<a href={entry.website} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t<span className='ts'>\r\n\t\t\t\t\t\t\t{myutil.trimURL(entry.website)} <i className=\"fas fa-external-link-alt\"></i>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{ entry.facebook &&\r\n\t\t\t\t\t<span className='ts facebook'>\r\n\t\t\t\t\t\t<a href={entry.facebook} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t\tfacebook <i className=\"fab fa-facebook-square\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t\t{ entry.line &&\r\n\t\t\t\t\t<span className='ts line'>\r\n\t\t\t\t\t\t&nbsp;<a href={`http://line.me/ti/p/${entry.line}`} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t\t LINE <i className=\"fab fa-line\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{/* add QR for line https://quickchart.io/qr?text=http://ine.me/ti/p/@Bangkokbank&size=150 */}\r\n\r\n\t\t\t{/* colorbar */}\r\n\t\t\t<div className='colorbar bar0'>\r\n\t\t\t\t<svg>\r\n\t\t\t\t\t<path d='M 250 0\r\n\t\t\t\t\t\t\t\t\t v 80\r\n\t\t\t\t\t\t\t\t\t h -250\r\n\t\t\t\t\t\t\t\t\t C 100 80, 250 80, 250 0'\r\n\t\t\t\t\t\t\t\tfill={`${entry.color}`} />\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t\t<div className='colorbar bar1'>\r\n\t\t\t\t<svg>\r\n\t\t\t\t\t<path d='M 150 0\r\n\t\t\t\t\t\t\t\t\t v 100\r\n\t\t\t\t\t\t\t\t\t h -150\r\n\t\t\t\t\t\t\t\t\t C 100 100, 150 50, 150 0'\r\n\t\t\t\t\t\t\t\tfill={`${entry.color}`} />\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t\t<div className='colorbar bar2'>\r\n\t\t\t\t<svg>\r\n\t\t\t\t\t<path d='M 100 0\r\n\t\t\t\t\t\t\t\t\t v 150\r\n\t\t\t\t\t\t\t\t\t h -100\r\n\t\t\t\t\t\t\t\t\t C 100 150, 100 20, 100 0'\r\n\t\t\t\t\t\t\t\tfill={`${entry.color}`} />\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({entries}) {\r\n\treturn(\r\n\t\t<div className='container'>\r\n\t\t\t{\r\n\t\t\t\tentries.map((entry, i) => {\r\n\t\t\t\t\treturn (<Card\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tentry={entry}\r\n\t\t\t\t\t\t\t\t\t/>);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nfunction Logo() {\r\n\treturn(\r\n\t\t<div className='logo'>\r\n\t\t\tB{/*\r\n\t\t\t\t    */}<span className=\"special-i\">\r\n\t      <span className=\"stack\">.</span>\r\n\t      <span className=\"stack\">Ä±</span>\r\n\t    </span>{/*\r\n\t    \t    */}zL{/*\r\n\t    \t    \t    */}<span className=\"special-i\">\r\n\t      <span className=\"stack bouncing\">.</span>\r\n\t      <span className=\"stack\">Ä±</span>\r\n\t    </span>{/*\r\n\t    */}st\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React, {useState, useEffect} from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport CardList from './CardList';\r\nimport Logo from './Logo';\r\nimport './style.css';\r\nimport * as myutil from './myutil';\r\n\r\nfunction App() {\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('fetch')\r\n\t\tfetch('https://spreadsheets.google.com/feeds/list/' \r\n\t\t\t\t+ process.env.REACT_APP_FILEID + '/'\r\n\t\t\t\t+ process.env.REACT_APP_SHEETID + '/public/values?alt=json')\r\n\t\t\t.then(response => response.text())\r\n\t\t\t.then(responsetext => processResponse(responsetext));\r\n\t}, []);\r\n\r\n\tconst [entries, setEntries] = useState([]);\r\n\tconst [searchfield, setSearchfield] = useState('');\r\n\r\n\tconsole.log('render...')\r\n\tif (!entries.length) {\r\n\t\treturn <h1>Loading...</h1>\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<div id='area-logo'>\r\n\t\t\t\t\t<div id='logo-background' />\r\n\t\t\t\t\t<div id='logo-wrapper'>\r\n\t\t\t\t\t\t<Logo />\r\n\t\t\t\t\t\t<SearchBox searchchange={onSearchChange} />\r\n\t\t\t\t\t\t<p>v2</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id='area-content'>\r\n\t\t\t\t\t<CardList entries={filterEntries(entries, searchfield)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction filterEntries(entries, sf) {\r\n\t\tlet tmp = [];\r\n\t\tconsole.log(sf)\r\n\t\tfor (const e of entries) {\r\n\t\t\tlet score = scoreEntry(e, sf);\r\n\t\t\tif (score > 0) {\r\n\t\t\t\ttmp.push(Object.assign(e, {'score': score}));\r\n\t\t\t}\r\n\t\t}\r\n\t\ttmp = tmp.sort((a, b) => b.score - a.score);\r\n\t\treturn tmp;\r\n\t}\r\n\r\n\t/* \r\n\t * Takes in an entry and gives a match score [0â1] based on the searchfield.\r\n\t */\r\n\tfunction scoreEntry(entry, sf) {\r\n\t\t\r\n\t\tconst score_names = 1;\r\n\t\tconst score_keywords = 0.8;\r\n\t\tconst score_others = 0.3;\r\n\r\n\t\t// top entries\r\n\t\tlet ref_names = [entry.name, entry.fullname];\r\n\t\tif (entry.fullname.substring(0, 6) === 'à¸à¸à¸²à¸à¸²à¸£') {\r\n\t\t\tref_names = ref_names.concat(entry.fullname.substring(6));\r\n\t\t}\r\n\t\t// keywords\r\n\t\tlet ref_keywords = [];\r\n\t\tif (entry.keyword) {\r\n\t\t\tref_keywords = ref_keywords.concat(entry.keyword.split(',').map((x) => x.trim()));\r\n\t\t}\r\n\r\n\t\t// find from top entries and keywords first\r\n\t\tconst result_names = ref_names.map((x) => indexToScore(x, sf) * score_names);\r\n\t\tconst result_keywords = ref_keywords.map((x) => indexToScore(x, sf) * score_keywords);\r\n\t\tconst tmp = Math.max(...result_names, ...result_keywords);\r\n\t\tif (tmp) {\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\r\n\t\t// then find from other things\r\n\t\tlet ref_others = [myutil.trimURLplus(entry.website),\r\n\t\t\t\t\t\t\t\t\t\t\tmyutil.trimFacebook(entry.facebook),\r\n\t\t\t\t\t\t\t\t\t\t\tentry.line,\r\n\t\t\t\t\t\t\t\t\t\t\tentry.call.split('\\n').map((x) => x.trim())];\r\n\t\tconst result_others = ref_others.map((x) => indexToScore(x, sf) * score_others);\r\n\t\treturn Math.max(...result_others);\r\n\t\t\r\n\t}\r\n\r\n\tfunction indexToScore(str, sf) {\r\n\t\tconst idx = str.toString().toLowerCase().replace(/[, -\\.]/g,'').indexOf(sf);\r\n\t\tif (idx === -1) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\telse if (idx === 0) {\r\n\t\t\treturn 0.5 + 0.5 * (sf.length / str.length);\r\n\t\t}\r\n\t\treturn 0.5;\r\n\t}\r\n\r\n\tfunction processResponse(response) {\r\n\t\tlet reducedResponse = JSON.parse(response.replace(/gsx\\$|\\$/g,'')).feed.entry.filter(entry => {return entry.display.t === 'x'});\r\n\t\tsetEntries(reducedResponse.map((e) => {\r\n\t\t\treturn({\r\n\t\t\t\tcall: e.call.t,\r\n\t\t\t\tcolor: e.color.t,\r\n\t\t\t\temail: e.email.t,\r\n\t\t\t\tfacebook: e.facebook.t,\r\n\t\t\t\tfullname: e.fullname.t,\r\n\t\t\t\tkeyword: e.keyword.t,\r\n\t\t\t\tline: e.line.t,\r\n\t\t\t\tname: e.name.t,\r\n\t\t\t\tremark: e.remark.t,\r\n\t\t\t\twebsite: e.website.t,\r\n\t\t\t\tscore: 1\r\n\t\t\t});\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction onSearchChange(event) {\r\n\t\tconsole.log('searchchange...')\r\n\t\tsetSearchfield(event.target.value.toLowerCase().replace(/[, -\\.]/g,''));\r\n\t}\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}